<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>no.mnemonic.act.platform</groupId>
  <artifactId>parent</artifactId>
  <packaging>pom</packaging>
  <version>0.0.101-SNAPSHOT</version>

  <name>ACT platform</name>
  <description>Open platform for collection and exchange of threat intelligence information</description>
  <url>https://github.com/mnemonic-no/act-platform</url>
  <inceptionYear>2017</inceptionYear>

  <licenses>
    <license>
      <name>ISC</name>
      <url>https://opensource.org/licenses/ISC</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
    <name>mnemonic as</name>
    <url>https://www.mnemonic.no</url>
  </organization>

  <developers>
    <developer>
      <name>mnemonic development team</name>
      <email>opensource@mnemonic.no</email>
      <url>https://github.com/mnemonic-no</url>
      <organization>mnemonic as</organization>
      <organizationUrl>https://www.mnemonic.no</organizationUrl>
      <timezone>Europe/Oslo</timezone>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- JDK compile target -->
    <jdk.version>1.8</jdk.version>

    <!-- mnemonic dependencies -->
    <mnemonic.commons.version>0.4.11</mnemonic.commons.version>
    <mnemonic.messaging.version>1.3.14</mnemonic.messaging.version>
    <mnemonic.services.common.version>0.3.33</mnemonic.services.common.version>
    <mnemonic.services.triggers.version>0.0.13</mnemonic.services.triggers.version>

    <!-- external dependencies -->
    <activemq.version>5.16.3</activemq.version>
    <cassandra.version>4.13.0</cassandra.version>
    <disruptor.version>3.4.4</disruptor.version>
    <elastic.search.version>7.16.2</elastic.search.version>
    <guava.version>31.0.1-jre</guava.version>
    <guice.version>5.0.1</guice.version>
    <hazelcast.version>3.12.12</hazelcast.version>
    <hibernate.validator.version>6.2.1.Final</hibernate.validator.version>
    <jackson.version>2.13.1</jackson.version>
    <javax.el.version>3.0.1-b12</javax.el.version>
    <javax.inject.version>1</javax.inject.version>
    <javax.validation.version>2.0.1.Final</javax.validation.version>
    <javax.ws.rs.version>2.1.1</javax.ws.rs.version>
    <jetty.version>9.4.44.v20210927</jetty.version>
    <junit.version>4.13.2</junit.version>
    <junit.jupiter.version>5.8.2</junit.jupiter.version>
    <log4j.version>2.17.1</log4j.version>
    <mockito.version>4.2.0</mockito.version>
    <picocli.version>4.6.2</picocli.version>
    <resteasy.version>4.7.4.Final</resteasy.version>
    <swagger.version>1.6.4</swagger.version>
    <tinkerpop.version>3.5.1</tinkerpop.version>

    <!-- force upgrade for transitive dependencies -->
    <commons.codec.version>1.15</commons.codec.version>
    <httpclient.version>4.5.13</httpclient.version>
    <jnr.posix.version>3.1.15</jnr.posix.version>
    <netty.version>4.1.72.Final</netty.version>

    <!-- build dependencies -->
    <maven.assembly.version>3.3.0</maven.assembly.version>
    <maven.clean.version>3.1.0</maven.clean.version>
    <maven.compiler.version>3.8.1</maven.compiler.version>
    <maven.deploy.version>2.8.2</maven.deploy.version>
    <maven.enforcer.version>1.4.1</maven.enforcer.version>
    <maven.install.version>2.5.2</maven.install.version>
    <maven.jar.version>3.2.0</maven.jar.version>
    <maven.javadoc.version>3.2.0</maven.javadoc.version>
    <maven.license.version>1.20</maven.license.version>
    <maven.really.executable.jar.version>1.5.0</maven.really.executable.jar.version>
    <maven.release.version>2.5.3</maven.release.version>
    <maven.resources.version>3.2.0</maven.resources.version>
    <maven.shade.version>3.2.4</maven.shade.version>
    <maven.source.version>3.2.1</maven.source.version>
    <maven.surefire.version>2.22.2</maven.surefire.version>
  </properties>

  <modules>
    <module>api</module>
    <module>auth</module>
    <module>dao</module>
    <module>rest</module>
    <module>service</module>
    <module>seb-model</module>
    <module>seb-producer</module>
    <module>seb-esengine</module>
    <module>utilities</module>
    <module>integration-test</module>
    <module>deployment-combined</module>
    <module>deployment-rest</module>
    <module>deployment-service</module>
    <module>cli-tools</module>
  </modules>

  <scm>
    <connection>scm:git:git://github.com/mnemonic-no/act-platform.git</connection>
    <developerConnection>scm:git:ssh://github.com:mnemonic-no/act-platform.git</developerConnection>
    <url>https://github.com/mnemonic-no/act-platform</url>
    <tag>HEAD</tag>
  </scm>

  <distributionManagement>
    <repository>
      <id>mnemonic</id>
      <url>https://artifactory.mnemonic.no/artifactory/mnemonic</url>
    </repository>
    <snapshotRepository>
      <id>mnemonic-snapshots</id>
      <url>https://artifactory.mnemonic.no/artifactory/mnemonic-snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven.enforcer.version}</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.1.0</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.version}</version>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
          <compilerArgs>
            <!-- Needed to get real parameter names during reflection instead of 'argN' (JEP 118). -->
            <arg>-parameters</arg>
            <!-- Needed by picocli-codegen to place generated code inside a unique folder. -->
            <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
          </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <!-- Needed to process annotations from the driver's object mapper. -->
              <groupId>com.datastax.oss</groupId>
              <artifactId>java-driver-mapper-processor</artifactId>
              <version>${cassandra.version}</version>
            </path>
            <!-- Needed to get compile time error checking of picocli annotations. -->
            <path>
              <groupId>info.picocli</groupId>
              <artifactId>picocli-codegen</artifactId>
              <version>${picocli.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.version}</version>
        <configuration>
          <includes>
            <!-- Execute all unit tests. -->
            <include>**/*Test.java</include>
            <!-- Execute integration tests by default. -->
            <include>**/*IT.java</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.version}</version>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven.release.version}</version>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <resume>false</resume>
          <pushChanges>false</pushChanges>
          <localCheckout>true</localCheckout>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven.clean.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>${maven.install.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven.deploy.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven.resources.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.version}</version>
        <configuration>
          <source>${jdk.version}</source>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>${maven.license.version}</version>
        <!-- Execute license check during the build process to detect violations as early as possible. -->
        <executions>
          <execution>
            <id>check-licenses</id>
            <phase>compile</phase>
            <goals>
              <goal>add-third-party</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- Execute plugin while building deployment packages. -->
          <acceptPomPackaging>true</acceptPomPackaging>
          <!-- Create THIRD-PARTY file listing all dependencies. -->
          <outputDirectory>${project.build.directory}</outputDirectory>
          <thirdPartyFilename>THIRD-PARTY</thirdPartyFilename>
          <!-- File used to specify licenses for dependencies which don't state their license in the pom.xml. -->
          <missingFile>../buildConfig/missing-licenses.properties</missingFile>
          <!-- Check transitive dependencies in order to include them in THIRD-PARTY file. -->
          <includeTransitiveDependencies>true</includeTransitiveDependencies>
          <!-- Fail the build if a detected license is not in the white list. -->
          <failIfWarning>true</failIfWarning>
          <!-- Only allow licenses which are in this list (with all the different ways to name them). -->
          <includedLicenses>
            <!-- Apache 2.0 -->
            <includedLicense>ASF 2.0</includedLicense>
            <includedLicense>Apache 2</includedLicense>
            <includedLicense>Apache 2.0</includedLicense>
            <includedLicense>Apache-2.0</includedLicense>
            <includedLicense>Apache License 2.0</includedLicense>
            <includedLicense>Apache License Version 2.0</includedLicense>
            <includedLicense>Apache License, version 2.0</includedLicense>
            <includedLicense>Apache License, Version 2.0</includedLicense>
            <includedLicense>Apache Software License, version 2.0</includedLicense>
            <includedLicense>Apache Software License - Version 2.0</includedLicense>
            <includedLicense>The Apache License, Version 2.0</includedLicense>
            <includedLicense>The Apache Software License, version 2.0</includedLicense>
            <includedLicense>The Apache Software License, Version 2.0</includedLicense>
            <!-- BSD and variants -->
            <includedLicense>BSD</includedLicense>
            <includedLicense>BSD 2-Clause License</includedLicense>
            <includedLicense>BSD-3-Clause</includedLicense>
            <includedLicense>New BSD License</includedLicense>
            <includedLicense>The New BSD License</includedLicense>
            <includedLicense>The BSD License</includedLicense>
            <includedLicense>EDL 1.0</includedLicense>
            <includedLicense>Eclipse Distribution License - v 1.0</includedLicense>
            <!-- CDDL and dual-licensed CDDL -->
            <includedLicense>CDDL 1.1</includedLicense>
            <includedLicense>CDDL License</includedLicense>
            <includedLicense>Common Development and Distribution License 1.0</includedLicense>
            <includedLicense>Common Development And Distribution License 1.1</includedLicense>
            <includedLicense>Common Development and Distribution License (CDDL) v1.0</includedLicense>
            <includedLicense>COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0</includedLicense>
            <includedLicense>CDDL+GPL License</includedLicense>
            <includedLicense>CDDL or GPLv2 with exceptions</includedLicense>
            <includedLicense>CDDL + GPLv2 with classpath exception</includedLicense>
            <includedLicense>Dual license consisting of the CDDL v1.1 and GPL v2</includedLicense>
            <!-- Eclipse and variants -->
            <includedLicense>Common Public License - v 1.0</includedLicense>
            <includedLicense>EPL 2.0</includedLicense>
            <includedLicense>EPL-2.0</includedLicense>
            <includedLicense>Eclipse Public License 1.0</includedLicense>
            <includedLicense>Eclipse Public License - Version 1.0</includedLicense>
            <includedLicense>Eclipse Public License - v 2.0</includedLicense>
            <includedLicense>Eclipse Public License v2.0</includedLicense>
            <!-- MIT and variants-->
            <includedLicense>Bouncy Castle Licence</includedLicense>
            <includedLicense>ISC</includedLicense>
            <includedLicense>MIT license</includedLicense>
            <includedLicense>MIT License</includedLicense>
            <includedLicense>The MIT License</includedLicense>
            <!-- Public domain -->
            <includedLicense>CC0</includedLicense>
            <includedLicense>Public Domain</includedLicense>
            <includedLicense>Public Domain, per Creative Commons CC0</includedLicense>
            <!-- Others -->
            <includedLicense>Indiana University Extreme! Lab Software License</includedLicense>
            <!-- The ElasticSearch client drags in server components, thus, we need to accept the license until the
                 dependencies upon the server components are removed. The client is actually Apache 2 licensed. -->
            <includedLicense>Elastic License 2.0</includedLicense>
          </includedLicenses>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>skipSlowTests</id>
      <activation>
        <property>
          <name>skipSlowTests</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven.surefire.version}</version>
            <configuration>
              <excludes>
                <!-- Exclude all integration tests. -->
                <exclude>**/*IT.java</exclude>
                <!-- Exclude all Cassandra tests. -->
                <exclude>no/mnemonic/act/platform/dao/cassandra/*</exclude>
                <!-- Exclude all ElasticSearch tests. -->
                <exclude>no/mnemonic/act/platform/dao/elastic/*</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
